version: '3.2'

services:
  microcms:
    image: rfielding/microcms:latest
    user: 0:0
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_REGION
      - AWS_SECRET_ACCESS_KEY
      - DOC_EXTRACTOR=http://tika:9998/tika
    volumes:
      - ./persistent:/root/persistent   # persistent data, which you can wipe before startup
      - ./config.json:/root/config.json # the user database, which hot-reloads
    depends_on:
      - tika
    networks:
      - mesh

  tika:
    image: rfielding/tika
    user: 0:0
    environment:
      - host=0.0.0.0
    networks:
      - mesh
 
  prometheus:
    image: rfielding/prometheus
    user: 0:0
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=debug'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/prometheus/'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./persistent/prometheus:/prometheus/data
    networks:
      - mesh

  rproxy:
    image: rfielding/rproxy
    user: 0:0
    ports:
      - 8443:8443
    environment:
      - RPROXY0=/files@http://microcms:9321/files
      - RPROXY1=/me@http://microcms:9321/me
      - RPROXY2=/registration@http://microcms:9321/registration
      - RPROXY3=/search@http://microcms:9321/search
      - RPROXY4=/prometheus/@http://prometheus:9090/prometheus/
      - RPROXY5=/metrics@http://microcms:9321/metrics
      #- RPROXY6=/ws@ws://localhost:3000/ws
      - RPROXY6=/@http://localhost:3000/
      - X509_CERT=/root/rproxy/cert.pem
      - X509_KEY=/root/rproxy/key.pem
      - BIND=0.0.0.0:8443
    depends_on:
      - microcms
    volumes:
      - ./certs/cert.pem:/root/rproxy/cert.pem
      - ./certs/key.pem:/root/rproxy/key.pem
      - ./react/init/ui:/root/ui
    networks:
      - mesh

networks:
  mesh: {}
    
